theme = value_box_theme(bg = "#FFCF4CFC"),
p(paste0("(", min_incidence_country, ", ", "per 100,000",")"))
)
value_box(
title = "Average Incidence (2019)",
value = round(avg_incidence_2019, 2),
showcase = bsicons::bs_icon("bar-chart-line"),
theme = value_box_theme(bg = "#FF8438"),
p(paste0("(per 100,000)"))
)
# Incidence by Country - Top 20 (2019)
top_20_countries_2019 <- colorectal_2019 %>%
group_by(country) %>%
summarise(incidence = mean(incidence, na.rm = TRUE)) %>%
arrange(desc(incidence)) %>%
mutate(tooltip_label = paste(country,
round(incidence, 1),
sep = ": ")) %>%
slice(1:20)
# Create the plot
ggplot_top20_2019 <- ggplot(top_20_countries_2019, aes(y = fct_reorder(country, incidence), x = incidence, text = tooltip_label)) +
geom_col(fill = "#FF5C33FD") +
labs(title = "Top 20 by Incidence (2019)",
y = "Country",
x = "Average Incidence (per 100,000)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
ggplotly_top20_2019 <- ggplotly(ggplot_top20_2019, tooltip = "text")
ggplotly_top20_2019
# Get min and max incidence for standardized scale
min_incidence <- min(colorectal_long$incidence, na.rm = TRUE)
max_incidence <- max(colorectal_long$incidence, na.rm = TRUE)
# Important note : here we didn't need to standardise country names with iso codes as we didn't merge datasets
# Create the animated choropleth map
animated_map <- plot_geo(
data = colorectal_long,
locationmode = "country names"  # Match country names in your dataset to map
) %>%
add_trace(
z = ~incidence,
zmin = min_incidence,    # Set scale's minimum
zmax = max_incidence,    # Set scale's maximum
locations = ~country,
color = ~incidence,
frame = ~year,           # Use year as the animation frame
colorscale = "Reds",
text = ~paste(
"Country: ", country,
"<br>Year: ", year,
"<br>Incidence: ", round(incidence, 2)
),                      # Add hover text
hoverinfo = "text"
) %>%
layout(
title = "Colorectal Cancer Incidence by Country (1990-2019)",
geo = list(
showframe = FALSE,
showcoastlines = TRUE,
projection = list(type = "equirectangular")
)
)
# Display the animated map
animated_map
# Average Incidence by Region (2019)
top_regions_2019 <- colorectal_2019 %>%
group_by(region) %>%
summarise(average_incidence = mean(incidence, na.rm = TRUE)) %>%
arrange(desc(average_incidence)) %>%
mutate(tooltip_label = paste(region,
round(average_incidence, 1),
sep = ": "))
# Create the plot
ggplot_top_regions_2019 <- ggplot(top_regions_2019, aes(y = fct_reorder(region, average_incidence), x = average_incidence, text = tooltip_label)) +
geom_col(fill = "#FF5B12FD") +
labs(title = "Average Colorectal Cancer Incidence by Region (2019)",
y = "Region",
x = "Average Incidence (per 100,000)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot (interactive tooltip with ggplotly)
plotly::ggplotly(ggplot_top_regions_2019, tooltip = "text")
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -30, xmax = 40, ymin = 30, ymax = 75)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#B71C1C", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
htmltools::browsable(
tagList(
reactable(colorectal_long,
elementId = "colorectal_incidence_table",
searchable = TRUE,
filterable = TRUE),
tags$button("Download as CSV",
onclick = "Reactable.downloadDataCSV('colorectal_incidence_table')")
)
)
# check for missing values
colorectal_long %>%
count(is.na(incidence))
# check for missing values
colorectal_long %>%
count(is.na(region))
colorectal_long
# check for missing values in the region
colorectal_long %>%
filter(is.na(region)) %>%
select(country) %>%
distinct()
colorectal_long
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -25, xmax = 40, ymin = 32, ymax = 67)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
missing_countries
# Standardize country names
europe_2019$country <- countrycode(europe_2019$country, "country.name", "iso3c")
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Standardize country names
europe_2019$country <- countrycode(europe_2019$country, "country.name", "iso3c")
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
europe_2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
missing_countries
europe_map
europe_2019
# Check what they are called in the map data
missing_countries
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czech Republic", "North Macedonia", "United Kingdom"), c("Czechia", "Macedonia", "UK"))))
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czech Republic", "North Macedonia", "United Kingdom"), c("Czechia", "Macedonia", "UK"))))
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
missing_countries
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czechia", "North Macedonia", "United Kingdom"), c("Czech Republic", "Macedonia", "UK"))))
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czechia", "Slovakia", "United Kingdom"), c("Czech Republic", "Slovack Republic", "UK"))))
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czechia", "Slovakia", "United Kingdom"), c("Czech Republic", "Slovak Republic", "UK"))))
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czechia", "Slovakia", "United Kingdom", "Bosnia and Herz."), c("Czech Republic", "Slovak Republic", "UK", "Bosnia and Herzegovina"))))
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
#Create a chloropleth map of CRC in Europe in 2019
# Filter data for Europe in 2019
europe_2019 <- colorectal_2019 %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(continent == "Europe")
missing_countries <- europe_2019 %>%
anti_join(europe_map, by = c("country" = "name"))
# Rename missing countries
europe_2019 <- europe_2019 %>%
mutate(country = recode(country, !!!setNames(c("Czechia", "Slovakia", "United Kingdom", "Bosnia and Herz."), c("Czech Republic", "Slovak Republic", "UK", "Bosnia and Herzegovina"))))
# Get spatial data for Europe (excluding Russia's non-European part and irrelevant islands)
europe_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf") %>%
filter(region_un == "Europe" & !sovereignt %in% c("Russia", "Turkey")) %>%
st_crop(xmin = -20, xmax = 40, ymin = 32, ymax = 65)
# Merge the map data with incidence data
europe_merged <- europe_map %>%
left_join(europe_2019, by = c("name" = "country"))
# Create a tooltip column
europe_merged <- europe_merged %>%
mutate(tooltip = paste0(
"<b>", name, "</b><br>",
"Incidence: ", round(incidence, 1), " per 100,000"
))
# Create the interactive map
interactive_map <- ggplot(europe_merged) +
geom_sf(aes(fill = incidence, text = tooltip), color = "black", size = 0.2) +
scale_fill_gradient(name = "CRC Incidence\n(per 100,000)",
low = "#FFEBEE", high = "#FF5B12FD", na.value = "grey90") +
labs(title = "Colorectal Cancer Incidence in Europe (2019)",
subtitle = "Data shows new cases per 100,000 men",
caption = "Source: Your Data Source") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
axis.text = element_blank(),
axis.ticks = element_blank())
# Convert ggplot to an interactive plot using plotly
plotly_map <- plotly::ggplotly(interactive_map, tooltip = "text")
# Display the interactive map
plotly_map
